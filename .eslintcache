[{"/home/daksh4469/Desktop/sortingviz/src/index.js":"1","/home/daksh4469/Desktop/sortingviz/src/reportWebVitals.js":"2","/home/daksh4469/Desktop/sortingviz/src/App.js":"3","/home/daksh4469/Desktop/sortingviz/src/Main.js":"4"},{"size":500,"mtime":1606815723786,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606815723786,"results":"7","hashOfConfig":"6"},{"size":204,"mtime":1606816696261,"results":"8","hashOfConfig":"6"},{"size":3275,"mtime":1606839545096,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"13ph3eg",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/daksh4469/Desktop/sortingviz/src/index.js",[],["21","22"],"/home/daksh4469/Desktop/sortingviz/src/reportWebVitals.js",[],"/home/daksh4469/Desktop/sortingviz/src/App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport './Main';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","/home/daksh4469/Desktop/sortingviz/src/Main.js",["24"],"import React, { useEffect, useState } from 'react';\nimport './Main.css'\nfunction Main(){\n    const [array,setArray] = useState([]);\n    const [start,setStart] = useState(false);\n    const [arraysize,setArraysize] = useState();\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    function generateNewArray(){\n        if(start){\n            return;\n        }\n        let newarray = [];\n        for(let i = 0;i<arraysize;i++){\n            newarray.push(Math.floor(Math.random()*(991)+10));\n        }\n        setArray(newarray);\n        console.log(array);\n    }\n\n    const arraysort = async()=>{\n        if(start){\n            return;\n        }\n        let temp;\n        setStart(true);\n        let i1 = 0,i2 = 0;\n        for(let i = 0;i<arraysize-1;i++){\n            for(let j = 0;j<arraysize-1-i;j++){\n                if(array[j]>array[j+1]){\n                    temp = array[j];\n                    array[j] = array[j+1];\n                    document.getElementsByClassName('bars')[j].style.backgroundColor = \"red\";\n                    document.getElementsByClassName('bars')[j].style.height = `${array[j+1]/2}px`;\n                    // document.getElementsByClassName('bars')[j].style.backgroundColor = \"aquamarine\";\n                    array[j+1] = temp;\n                    document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"red\";\n                    document.getElementsByClassName('bars')[j+1].style.height = `${temp/2}px`;\n                    i2 = j+1;\n                    i1 = j;\n                    // document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"aquamarine\";\n                }\n                await sleep(20);\n                document.getElementsByClassName('bars')[i1].style.backgroundColor = \"aquamarine\";\n                document.getElementsByClassName('bars')[i2].style.backgroundColor = \"aquamarine\";\n            }\n            // document.getElementsByClassName('bars')[99].style.backgroundColor = \"blue\";\n            await sleep(75);\n        }\n        setStart(false);\n    }\n\n    const initial = async()=>{\n        await sleep(1000);\n        changeArraysize();\n    }\n\n    useEffect(()=>{\n        generateNewArray();\n        initial();\n    },[]);\n\n    function changeArraysize(){\n        let as = prompt(\"Please enter the array size between 20 and 100\");\n        console.log(\"as: \"+as);\n        setArraysize(as);\n        generateNewArray();\n        generateNewArray();\n    }\n\n    return (\n        <div>\n            <h1>SortingViz</h1>\n            <button onClick={generateNewArray} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Generate New Array</button>\n            <button onClick={changeArraysize} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Change Array Size</button>\n            <button onClick={arraysort} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Sort</button>\n            <div className=\"array-container\">\n                {\n                    array.map((num)=>(\n                        <div className=\"bars\" style={{height: `${num/2}px`}}>\n                            {/* {num} */}\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Main;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"34","line":64,"column":7,"nodeType":"35","endLine":64,"endColumn":9,"suggestions":"36"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'generateNewArray' and 'initial'. Either include them or remove the dependency array.","ArrayExpression",["39"],"no-global-assign","no-unsafe-negation",{"desc":"40","fix":"41"},"Update the dependencies array to be: [generateNewArray, initial]",{"range":"42","text":"43"},[2272,2274],"[generateNewArray, initial]"]