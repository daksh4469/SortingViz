{"version":3,"sources":["logo.svg","Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","Main","props","classes","useState","array","setArray","start","setStart","arraysize","setArraysize","msg","setMsg","mode","setMode","sleep","milliseconds","Promise","resolve","setTimeout","generateNewArray","newarray","i","push","Math","floor","random","console","log","length","document","getElementsByClassName","style","backgroundColor","arraysort","a","i1","i2","j","temp","height","k","useEffect","className","Box","mt","Button","button","variant","onClick","opacity","color","changeArraysize","as","prompt","map","num","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.717d97d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport './Main.css';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: \"70vw\",\n    },\n  }));\n\nfunction Main(props){\n    const classes = useStyles();\n    const [array,setArray] = useState([]);\n    const [start,setStart] = useState(false);\n    const [arraysize,setArraysize] = useState(75);\n    const [msg,setMsg] = useState(\"\");\n    const [mode,setMode] = useState(false);\n\n    const sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    function generateNewArray(){\n        if(start){\n            return;\n        }\n        setMsg(\"\");\n        let newarray = [];\n        for(let i = 0;i<arraysize;i++){\n            newarray.push(Math.floor(Math.random()*(991)+10));\n        }\n        setArray(newarray);\n        console.log(array);\n        for(let i = 0;i<array.length;i++){\n            document.getElementsByClassName('bars')[i].style.backgroundColor = \"aquamarine\";\n        }\n    }\n\n    const arraysort = async()=>{\n        if(start){\n            return;\n        }\n        setMsg(\"\");\n        let temp;\n        setStart(true);\n        let i1 = 0,i2 = 0;\n        for(let i = 0;i<arraysize-1;i++){\n            for(let j = 0;j<arraysize-1-i;j++){\n                document.getElementsByClassName('bars')[j].style.backgroundColor = \"royalblue\";\n                document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"royalblue\";\n                await sleep(1000/arraysize);\n                if(array[j]>array[j+1]){\n                    temp = array[j];\n                    array[j] = array[j+1];\n                    document.getElementsByClassName('bars')[j].style.backgroundColor = \"red\";\n                    document.getElementsByClassName('bars')[j].style.height = `${array[j+1]/2}px`;\n                    // document.getElementsByClassName('bars')[j].style.backgroundColor = \"aquamarine\";\n                    array[j+1] = temp;\n                    document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"red\";\n                    document.getElementsByClassName('bars')[j+1].style.height = `${temp/2}px`;\n                    i2 = j+1;\n                    i1 = j;\n                    // document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"aquamarine\";\n                }\n                else{\n                    document.getElementsByClassName('bars')[j].style.backgroundColor = \"aquamarine\";\n                    document.getElementsByClassName('bars')[j+1].style.backgroundColor = \"aquamarine\";\n                }\n                await sleep(2000/arraysize);\n                if(document.getElementsByClassName('bars')[i1].style.backgroundColor!==\"blue\"){\n                    document.getElementsByClassName('bars')[i1].style.backgroundColor = \"aquamarine\";\n                }\n                if(document.getElementsByClassName('bars')[i2].style.backgroundColor!==\"blue\"){\n                    document.getElementsByClassName('bars')[i2].style.backgroundColor = \"aquamarine\";\n                }\n                // document.getElementsByClassName('bars')[i2].style.backgroundColor = \"royalblue\";\n            }\n            for(let k = arraysize-1;k>=arraysize-i-1;k--){\n                document.getElementsByClassName('bars')[k].style.backgroundColor = \"blue\"; \n            }\n            // document.getElementsByClassName('bars')[99].style.backgroundColor = \"blue\";\n            await sleep(75);\n        }\n        document.getElementsByClassName('bars')[0].style.backgroundColor = \"blue\";\n        setStart(false);\n        setMsg(\"Array is Sorted.\");\n    }\n\n    useEffect(()=>{\n        generateNewArray();\n    },[arraysize]);\n\n    function changeArraysize(){\n        if(start){\n            return;\n        }\n        let as = prompt(\"Please enter the array size between 10 and 150\");\n        console.log(\"as: \"+as);\n        if(as==null || as.length==0 || as<10 || as>150){\n            changeArraysize();\n        }\n        setArraysize(as);\n        generateNewArray();\n        for(let i = 0;i<array.length;i++){\n            document.getElementsByClassName('bars')[i].style.backgroundColor = \"aquamarine\";\n        }\n    }\n\n    function darkmode(){\n        if(!mode){\n            setMode(true);\n            document.getElementsByClassName('array-container')[0].style.backgroundColor = \"black\";\n            document.getElementsByClassName('window')[0].style.backgroundColor = \"black\";\n            document.getElementsByClassName('heading')[0].style.color = \"white\";\n            document.getElementsByClassName('dark')[0].style.color = \"white\";\n        }\n        else{\n            setMode(false);\n            document.getElementsByClassName('array-container')[0].style.backgroundColor = \"white\";\n            document.getElementsByClassName('window')[0].style.backgroundColor = \"white\";\n            document.getElementsByClassName('heading')[0].style.color = \"black\";\n            document.getElementsByClassName('dark')[0].style.color = \"black\";\n        }\n    }\n\n    return (\n        <div className=\"window\">\n            <h1 className=\"heading\">SortingViz</h1>\n            <div className=\"buttons\">\n            <Box mt={2}>\n            <Button className={classes.button} variant=\"contained\" onClick={generateNewArray} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Generate New Array</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={changeArraysize} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Change Array Size</Button>\n            <Button color=\"primary\" variant=\"contained\" onClick={arraysort} style={start ? {opacity: \"0.5\"} : {opacity: \"1\"}}>Sort</Button>\n            <Button onClick={darkmode} className=\"dark\" color=\"primary\">{mode ? \"Light Mode\" : \"Dark Mode\"}</Button>\n            </Box>\n            </div>\n            <p>{msg}</p>\n            <div className=\"array-container\">\n                {\n                    array.map((num)=>(\n                        <div className=\"bars\" style={{height: `${num/2}px`, width: `${30/array.length}vw`}}>\n                            {/* {num} */}\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport './Main';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}